syntax = "proto2";

enum RAN_message_type{
    SUBSCRIPTION = 1;
    INDICATION_REQUEST = 2;
    INDICATION_RESPONSE = 3;
    CONTROL = 4;
} 

enum RAN_parameter{   //the parameters of the gNB
    GNB_ID = 1;
    UE_LIST = 3;
    BER = 5; //  (1) new parameter for BER
}

message RAN_param_map_entry{      //map: collection of keys and values
    required RAN_parameter key = 1;    //key: name of a parameter that the xApp requested
    oneof value{                       //value of the parameter
        int64 int64_value  = 2;
        string string_value = 3;
        ue_list_m ue_list = 4;
        float ber_value = 5;    // (2) new field for BER value
    }
}

/* RAN SUBMESSAGES */
message RAN_indication_request{
    repeated RAN_parameter target_params = 1;
    optional bool send_ber_flag = 2;   // (3) new flag to send BER
}

message RAN_indication_response{   //response of the gNB
    repeated RAN_param_map_entry param_map = 1;
}

message RAN_control_request{
    repeated RAN_param_map_entry target_param_map = 1;
}

/* MASTER RAN MESSAGE */

message RAN_message{
    required RAN_message_type msg_type = 1;
    oneof payload{
        RAN_indication_request ran_indication_request = 2;  //the xApp asks the gNB to report on some of its parameters
        RAN_indication_response ran_indication_response = 3;  //the answer of the gNB
        RAN_control_request ran_control_request = 4;  //message sent to the xApp to control the parameter of the gNB
    }
}

message ue_info_m{

    // this is to identify the ue
    required int32 rnti=1;     //rnti: UE's radio network temporary identifier

    // specific ue's measurements (these will come from the gnb)
    optional float meas_type_1=2;
    optional float meas_type_2=3;
    optional float meas_type_3=4;

    // specific ue's propoerties (these will be set by the xapp and sent to gnb)
    optional bool prop_1 = 5;
    optional float prop_2 = 6;
}

message ue_list_m{
  required int32 connected_ues = 1;
  repeated ue_info_m ue_info = 2;
}
